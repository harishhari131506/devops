name: Build and Deploy App with Docker Compose

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build-and-deploy:
    runs-on: self-hosted  # This will run on your self-hosted EC2 instance

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2  # Checks out the repository so that we can work with the code

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2  # Set up Buildx for building multi-architecture Docker images
      with:
        use: latest  # Ensures the latest version of Buildx is used
        driver: docker-container  # Use container-based driver for Buildx, making it more stable and portable

    - name: Cache Docker layers
      uses: actions/cache@v2  # Caches Docker layers to speed up the build process
      with:
        path: /tmp/.buildx-cache  # Path to cache Docker buildx cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}  # Cache key based on commit SHA
        restore-keys: |
          ${{ runner.os }}-buildx-  # Allows cache restoration based on the OS

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.17.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose  # Make the Docker Compose binary executable
        docker-compose --version  # Verifies Docker Compose installation

    - name: Log in to Docker Hub
      uses: docker/login-action@v2  # Logs into Docker Hub to allow pushing and pulling of images
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # GitHub secret for Docker username
        password: ${{ secrets.DOCKER_PASSWORD }}  # GitHub secret for Docker password

    - name: Build Docker images with Docker Compose
      run: |
        docker-compose -f docker-compose.yml build  # Build images defined in docker-compose.yml

    - name: Tag Docker images
      run: |
        docker-compose -f docker-compose.yml images | awk '{if (NR>1) print $1}' | xargs -I {} docker tag {}:latest harish130615/{}:${{ github.sha }}  # Tag images with commit SHA

    - name: Push Docker images to Docker Hub
      run: |
        docker-compose -f docker-compose.yml push  # Push the images to Docker Hub

    - name: Deploy Docker container to EC2
      uses: appleboy/ssh-action@v0.1.0  # Use SSH to connect to EC2 and deploy the application
      with:
        host: ${{ secrets.EC2_HOST }}  # EC2 public IP address or DNS
        username: ubuntu  # The SSH username (default for EC2 Ubuntu is "ubuntu")
        key: ${{ secrets.EC2_SSH_KEY }}  # SSH private key (stored securely in GitHub Secrets)
        port: 22  # SSH port (default for EC2 is 22)
        script: |
          cd /home/ubuntu/app-directory  # Navigate to your app directory on EC2 (change as necessary)
          docker-compose pull  # Pull the latest images from Docker Hub
          docker-compose up -d  # Recreate and start containers in detached mode


# name: Build and Deploy App with Docker Compose

# on:
#   push:
#     branches:
#       - main  # Trigger on push to the main branch

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout the repository
#       uses: actions/checkout@v2

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2

#     - name: Cache Docker layers
#       uses: actions/cache@v2
#       with:
#         path: /tmp/.buildx-cache
#         key: ${{ runner.os }}-buildx-${{ github.sha }}
#         restore-keys: |
#           ${{ runner.os }}-buildx-

#     - name: Install Docker Compose
#       run: |
#         sudo curl -L "https://github.com/docker/compose/releases/download/v2.17.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#         sudo chmod +x /usr/local/bin/docker-compose
#         docker-compose --version  # Verify installation

#     - name: Log in to Docker Hub
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}  # Add this secret in GitHub Secrets
#         password: ${{ secrets.DOCKER_PASSWORD }}  # Add this secret in GitHub Secrets

#     - name: Build Docker images with Docker Compose
#       run: |
#         # Use docker-compose to build the images
#         docker-compose -f docker-compose.yml build

#     - name: Tag Docker images
#       run: |
#         # Tag each service image based on the commit SHA
#         docker-compose -f docker-compose.yml images | awk '{if (NR>1) print $1}' | xargs -I {} docker tag {}:latest harish130615/{}:${{ github.sha }}
#     - name: Push Docker images to Docker Hub
#       run: |
#         # Push all images defined in your docker-compose.yml to Docker Hub
#         docker-compose -f docker-compose.yml push

#     - name: SSH to EC2 and deploy Docker container
#       uses: appleboy/ssh-action@v0.1.0
#       with:
#         host: ${{ secrets.EC2_HOST }}  # EC2 public IP address
#         username: ubuntu  
#         key: ${{ secrets.EC2_SSH_KEY }} 
#         port: 22
#         script: |
#           cd /home/ubuntu/app-directory  # Adjust to your app directory on EC2
#           docker-compose pull  # Pull the latest images from Docker Hub
#           docker-compose up -d  # Recreate and start containers in detached mode
