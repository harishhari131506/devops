name: Build and Deploy App with Docker Compose

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.17.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version  # Verify installation

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Add this secret in GitHub Secrets
        password: ${{ secrets.DOCKER_PASSWORD }}  # Add this secret in GitHub Secrets

    - name: Build Docker images with Docker Compose
      run: |
        # Use docker-compose to build the images
        docker-compose -f docker-compose.yml build

    - name: Tag Docker images
      run: |
        # Tag each service image based on the commit SHA
        docker-compose -f docker-compose.yml images | awk '{if (NR>1) print $1}' | xargs -I {} docker tag {}:latest harish130615/{}:${{ github.sha }}
    - name: Push Docker images to Docker Hub
      run: |
        # Push all images defined in your docker-compose.yml to Docker Hub
        docker-compose -f docker-compose.yml push

    - name: SSH to EC2 and deploy Docker container
      uses: appleboy/ssh-action@v0.1.0
      with:
        host: ${{ secrets.EC2_HOST }}  # EC2 public IP address
        username: ubuntu  # EC2 user (typically 'ubuntu' for Ubuntu-based instances)
        key: ${{ secrets.EC2_SSH_KEY }} 
        port: 22
        script: |
          cd /home/ubuntu/app-directory  # Adjust to your app directory on EC2
          docker-compose pull  # Pull the latest images from Docker Hub
          docker-compose up -d  # Recreate and start containers in detached mode
