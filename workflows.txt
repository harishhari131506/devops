name: Deployment Workflow

on:
  push:
    branches:
      - main
      - 'feature/*'

jobs:
  lint-and-test:
    name: Code Linting and Testing
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Install dependencies
      - name: Install Dependencies
        run: npm ci

      # Run ESLint
      - name: Lint Code with ESLint
        run: npm run lint

      # Run Unit Tests
      - name: Run Unit Tests
        run: npm test

      # Generate Code Coverage Report
      - name: Generate Code Coverage
        run: npm run coverage

      # Upload Coverage Report to GitHub
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ./coverage

  build-and-scan:
    name: Build and Scan Docker Image
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t my-app:${{ github.sha }} .
          docker tag my-app:${{ github.sha }} my-app:latest

      # Scan Docker Image for Security Vulnerabilities
      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@v0.10.0
        with:
          image-ref: my-app:${{ github.sha }}

      # Push Docker Image to DockerHub
      - name: Push Docker Image
        run: |
          docker push my-app:${{ github.sha }}
          docker push my-app:latest

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: build-and-scan
    if: github.ref == 'refs/heads/main'

    steps:
      # Deployment logic (example: pushing to a cloud provider)
      - name: Deploy to Production
        run: echo "Deploying to production environment..."
